/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/screen/promotion.js":
/*!************************************!*\
  !*** ./src/js/screen/promotion.js ***!
  \************************************/
/***/ (() => {

eval("function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// showing banner\nvar show2 = document.querySelector(\".show_2\");\nvar show3 = document.querySelector(\".show_3\");\nwindow.addEventListener(\"scroll\", scrolling);\n\nfunction scrolling(event) {\n  if (window.scrollY > 200) {\n    show2.classList.add(\"on\");\n  }\n\n  if (window.scrollY > 800) {\n    show3.classList.add(\"on\");\n  }\n} // showing banner\n// event progress //\n\n\nvar events = document.querySelectorAll(\".eventBox > div\");\nvar eventsArray = Array.from(events);\nvar playBtn = document.querySelector(\".playBtn\");\nvar progressIndex = 0;\nplayBtn.addEventListener(\"click\", startEventGame);\n\nfunction startEventGame() {\n  var _iterator = _createForOfIteratorHelper(events),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n\n      if (item.classList.contains(\"dragEvent\")) {\n        item.classList.add(\"on\");\n      } else {\n        item.classList.remove(\"on\");\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  progressIndex++;\n} // event progress //\n// dragEvent //\n\n\nvar draggableArea = document.getElementById(\"draggables\");\nvar dragCheckAnswer = document.querySelector(\".dragEvent button\");\nvar draggables = Array.from(document.querySelectorAll(\"#draggable\"));\nvar droppables = Array.from(document.querySelectorAll(\"#droppable\"));\nvar currentDroppable = null;\ndraggables.forEach(function (item) {\n  return item.onmousedown = function (event) {\n    var target = event.target;\n    var shiftX = event.clientX - target.getBoundingClientRect().left;\n    var shiftY = event.clientY - target.getBoundingClientRect().top;\n    target.style.position = \"absolute\";\n    target.style.zIndex = 1000;\n    document.body.append(target);\n    moveAt(event.pageX, event.pageY);\n\n    function moveAt(x, y) {\n      target.style.left = x - shiftX + \"px\";\n      target.style.top = y - shiftY + \"px\";\n    }\n\n    target.addEventListener(\"mousemove\", onMouseMove);\n\n    function onMouseMove(event) {\n      target.style.display = \"none\";\n      var elemBelow = document.elementFromPoint(event.clientX, event.clientY);\n      target.style.display = \"flex\";\n      moveAt(event.pageX, event.pageY);\n      var droppableBelow = elemBelow.closest(\".droppable\");\n\n      if (currentDroppable != droppableBelow) {\n        if (currentDroppable) {\n          currentDroppable.classList.remove(\"over\");\n        }\n\n        currentDroppable = droppableBelow;\n\n        if (currentDroppable) {\n          currentDroppable.classList.add(\"over\");\n        }\n      }\n\n      target.addEventListener(\"mouseup\", onMouseUp);\n    }\n\n    function onMouseUp(event) {\n      target.removeEventListener(\"mousemove\", onMouseMove);\n      target.onmouseup = null;\n      target.style.display = \"none\";\n      var elemBelow = document.elementFromPoint(event.clientX, event.clientY);\n      var droppableBelow = elemBelow.closest(\".droppable\");\n      target.style.display = \"flex\";\n\n      if (droppableBelow) {\n        var value = target.innerText;\n        target.style.display = \"none\";\n        droppableBelow.classList.add(\"complete\");\n        droppableBelow.innerText = value;\n      } else {\n        var targetIndex = Number(target.dataset.dragIndex) - 1;\n        draggableArea.append(target);\n        target.style.top = 0 + \"px\";\n\n        switch (targetIndex) {\n          case 0:\n            target.style.left = 0 + \"%\";\n            break;\n\n          case 5:\n            target.style.left = 85 + \"%\";\n            break;\n\n          default:\n            target.style.left = targetIndex * 15 + targetIndex * 2 + \"%\";\n        }\n      }\n    }\n  };\n});\ndragCheckAnswer.addEventListener(\"click\", checkDragAnswer);\n\nfunction checkDragAnswer() {\n  var _iterator2 = _createForOfIteratorHelper(droppables),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var item = _step2.value;\n\n      if (item.innerText != \"\") {\n        if (item.innerText === item.dataset.answer) {\n          continue;\n        } else {\n          alert(\"아쉽지만 다음 기회에...\");\n          return;\n        }\n      } else {\n        alert(\"정답을 고르세요\");\n        return;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  alert(\"정답입니다.\");\n  progressIndex++;\n  eventsArray.forEach(function (article) {\n    if (eventsArray.indexOf(article) == progressIndex) {\n      article.style.display = \"flex\";\n    } else {\n      article.style.display = \"none\";\n    }\n  });\n} // dragEvent //\n\n//# sourceURL=webpack://vanilajs/./src/js/screen/promotion.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/screen/promotion.js"]();
/******/ 	
/******/ })()
;